#!/bin/bash

export DISCLAIMER="# auto-generated by init.sh"
export STEP=${1:-}

## Checking if Proxy is ok
if [[ "$STEP" = "0" ]] || [[ -z "$STEP" ]]; then
echo -e "\n## [0] Checking your proxy"
CODE=$(curl -sI pi.jorgeadolfo.com | head -1 | awk '{print $2}')
if [ "$CODE" = "470" ]; then
  echo -e "> proxy is not configured [$CODE]"
elif [[ "$CODE" = "502" ]]; then
  echo -e "> proxy is configured [OK]"
  echo "  Do you wish to continue with the setup? [ctrl-c to quit]"
  read -r
else
  echo "> proxy check was not ok [$CODE]"
fi
fi


## Adding env variables and aliases to bashrc
if [[ "$STEP" = "1" ]] || [[ -z "$STEP" ]]; then
echo -e "\n## [1] Appending env variables and aliases to  ~/.bashrc"
echo "export http_proxy=http://webproxy.deutsche-boerse.de:8080 $DISCLAIMER" >> ~/.bashrc
echo "export https_proxy=http://webproxy.deutsche-boerse.de:8080 $DISCLAIMER" >> ~/.bashrc
echo "export no_proxy=*.deutsche-boerse.de $DISCLAIMER" >> ~/.bashrc
echo "alias cddotfiles=cd\\ ~/.dotfiles $DISCLAIMER" >> ~/.bash_aliases
. ~/.bashrc
fi


## Create a new ssh key
if [[ "$STEP" = "2" ]] || [[ -z "$STEP" ]]; then
echo -e "\n## [2] Creating a new ssh key"
ssh-keygen -t rsa
fi


## Stop open github and add the new key
if [[ "$STEP" = "3" ]] || [[ -z "$STEP" ]]; then
echo -e "\n## [3] Open github and add your new ssh key\n"
echo -e "\n## press enter to copy your public key to your clipboard"
read -r
cat ~/.ssh/id_rsa.pub | xclip -i -selection clipboard
read -r
echo -e "\n## press enter to open firefox with github"
xdg-open https://github.com/settings/keys
echo -e "[press enter when you are done]"
read -r
fi


## Configure the git/ssh proxy for GITHUB
if [[ "$STEP" = "4" ]] || [[ -z "$STEP" ]]; then
echo -e "\n## [4] Configuring the proxy on your ssh to clone git repos"
echo "host github.com $DISCLAIMER" >> ~/.ssh/config
echo "	hostname ssh.github.com $DISCLAIMER" >> ~/.ssh/config
echo "	user git $DISCLAIMER" >> ~/.ssh/config
echo "	port 443 $DISCLAIMER" >> ~/.ssh/config
echo "	proxycommand socat - PROXY:webproxy.deutsche-boerse.de:%h:%p,proxyport=8080 $DISCLAIMER" >> ~/.ssh/config
## Configure the git/ssh proxy for GITLAB
echo "host gitlab.com $DISCLAIMER" >> ~/.ssh/config
echo "	hostname altssh.gitlab.com $DISCLAIMER" >> ~/.ssh/config
echo "	user git $DISCLAIMER" >> ~/.ssh/config
echo "	port 443 $DISCLAIMER" >> ~/.ssh/config
echo "	proxycommand socat - PROXY:webproxy.deutsche-boerse.de:%h:%p,proxyport=8080 $DISCLAIMER" >> ~/.ssh/config
fi


## Installing useful stuff
if [[ "$STEP" = "5" ]] || [[ -z "$STEP" ]]; then
echo -e "\n## [5] Installing useful stuff"
sudo apt install socat make -y
fi


## Git cloning the dotfiles repo
if [[ "$STEP" = "6" ]] || [[ -z "$STEP" ]]; then
echo -e "\n## [6] Git cloning the dotfiles repo"
git clone --recurse-submodules git@github.com:rodelrod/dotfiles.git ~/.dotfiles
fi


## Creating your bashrc in the repo
if [[ "$STEP" = "7" ]] || [[ -z "$STEP" ]]; then
echo -e "\n## [7] Creating an empty bashrc in the git repo [roles/common/stow]"
touch "$HOME/.dotfiles/roles/common/stow/bashrc/.bashrc.hosts.d/$(hostname).bashrc"
fi


## Done
echo ""
