---
- name: Create cache directory for this Playbook
  file:
    path: "{{ ansible_env.HOME }}/.cache/dotfiles"
    state: directory

- name: Install core libraries using APT
  become: true
  apt: name={{ item }} state=latest
  with_items:
    - curl
    - direnv
    - docker.io
    - fzf
    - htop
    - iftop
    - jq
    - pandoc
    - pdftk
    - postgresql-client-common
    - python3-dev
    - python3-venv
    - pipx
    - ripgrep
    - shellcheck
    - sqlite3
    - stow
    - tmux
    - tree
    - traceroute
    - universal-ctags
    - vim
    - zsh

- name: Install pipx applications
  command:
    cmd: "pipx install {{ item }}"
    creates: "~/.local/pipx/venvs/{{ item }}"
  with_items:
    - docker-compose
    - poetry

- name: Stow configuration files
  stow:
    state: present
    package: "{{ item }}"
    dir: roles/common/stow
  with_items:
    - stow

- name: Make .profile read .profile.d
  blockinfile:
    path: ~/.profile
    block: |
      # Read extra configuration from ~/.profile.d
      if [ -d "$HOME"/.profile.d ]; then
        for file in "$HOME"/.profile.d/*.profile; do
            [ -f "$file" ] && . "$file"
        done
      fi

- name: Make .bashrc read .bashrc.d
  blockinfile:
    path: ~/.bashrc
    block: |
      # Read machine-specific configuration
      source "$HOME"/.bashrc.hosts.d/$(hostname).bashrc

      # Read extra configuration from ~/.bashrc.d
      for file in "$HOME"/.bashrc.d/*.bashrc
      do
          [[ -f "$file" ]] && source "$file"
      done

- name: Install Poetry bash completions
  shell:
    cmd: "poetry completions bash > ~/.local/share/bash-completion/completions/poetry.bash-completion"
    creates: "~/.local/share/bash-completion/completions/poetry.bash-completion"
